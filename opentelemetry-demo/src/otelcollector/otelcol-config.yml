receivers:
  otlp:
    protocols:
      grpc:
      http:
        cors:
          allowed_origins:
            - "http://*"
            - "https://*"
  hostmetrics:
    collection_interval: 5s
    scrapers:
      load:
      filesystem:
      network:
      memory:
      paging:
      

exporters:
  otlp:
    endpoint: "jaeger:4317"
    tls:
      insecure: true
  logging:
  prometheus:
    endpoint: "otelcol:9464"

processors:
  resourcedetection:
    detectors: [env, docker]
    timeout: 2s
    override: false
  batch:
  spanmetrics:
    metrics_exporter: prometheus
  servicegraph:
    metrics_exporter: prometheus
    latency_histogram_buckets: [100us, 1ms, 2ms, 6ms, 10ms, 100ms, 250ms] # Buckets for latency histogram
    dimensions: [cluster, namespace] # Additional dimensions (labels) to be added to the metrics extracted from the resource and span attributes
    store: # Configuration for the in-memory store
      ttl: 2s # Value to wait for an edge to be completed
      max_items: 200 # Amount of edges that will be stored in the storeMap


service:
  pipelines:
    traces:
      receivers: [otlp]
      processors: [spanmetrics, batch, servicegraph]
      exporters: [logging, otlp]
    metrics:
      receivers: [otlp, hostmetrics]
      processors: [batch, resourcedetection]
      exporters: [prometheus, logging]
